#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 3855 0 26 3 16 #"#lang plai-typed"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"python-core-syntax.rkt\""
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 19 3 23 #"\"python-primitives.rkt\""
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 19 3 20 #"\"python-objects.rkt\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 22 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #"]) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #") ("
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #") ("
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"AExc"
0 0 22 3 2 #" ("
0 0 14 3 5 #"excpt"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 5 #"print"
0 0 22 3 1 #" "
0 0 14 3 5 #"excpt"
0 0 22 3 2 #") "
0 0 14 3 5 #"excpt"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #") "
0 0 14 3 5 #"value"
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #"] ["
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 3 #"] ["
0 0 14 3 4 #"lenv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #"]) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"CNum"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VNum"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"CStr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VStr"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 5 #"CList"
0 0 22 3 2 #" ("
0 0 14 3 2 #"es"
0 0 22 3 3 #") ("
0 0 15 3 6 #"letrec"
0 0 22 3 3 #" (["
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 1 #" "
0 0 14 3 2 #"es"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"last"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                      "
0 0 14 3 4 #"last"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"VList"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")) "
0 0 14 3 3 #"rst"
0 0 22 3 4 #")) ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 3 #") ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CTuple"
0 0 22 3 2 #" ("
0 0 14 3 2 #"es"
0 0 22 3 3 #") ("
0 0 15 3 6 #"letrec"
0 0 22 3 3 #" (["
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 1 #" "
0 0 14 3 2 #"es"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"last"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                      "
0 0 14 3 4 #"last"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VTuple"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")) "
0 0 14 3 3 #"rst"
0 0 22 3 4 #")) ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 3 #") ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 5 #"CDict"
0 0 22 3 2 #" ("
0 0 14 3 4 #"keys"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 3 #") ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 6 #"length"
0 0 22 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 3 #") ("
0 0 14 3 6 #"length"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 15 3 6 #"letrec"
0 0 22 3 3 #" (["
0 0 14 3 6 #"keyrst"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ["
0 0 14 3 7 #"keylast"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 22 3 1 #" "
0 0 14 3 6 #"keyrst"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 7 #"keylast"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 14 3 7 #"keylast"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ("
0 0 15 3 6 #"letrec"
0 0 22 3 3 #" (["
0 0 14 3 9 #"valuesrst"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 7 #"keylast"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 7 #"keylast"
0 0 22 3 3 #") ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 7 #"keylast"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 45 #"                                            ["
0 0 14 3 10 #"valueslast"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 22 3 1 #" "
0 0 14 3 9 #"valuesrst"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 10 #"valueslast"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 41 #"                                         "
0 0 14 3 10 #"valueslast"
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"VDict"
0 0 22 3 2 #" ("
0 0 14 3 9 #"valfoldl2"
0 0 22 3 1 #" "
0 0 14 3 6 #"keyrst"
0 0 22 3 1 #" "
0 0 14 3 9 #"valuesrst"
0 0 22 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 48 #"                                               ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 10 #"valueslast"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 10 #"valueslast"
0 0 22 3 3 #") ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 10 #"valueslast"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 26 #"\"You should not been here\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 5 #"CTrue"
0 0 22 3 5 #" () ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"VTrue"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CFalse"
0 0 22 3 5 #" () ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VFalse"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CEmpty"
0 0 22 3 5 #" () ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VEmpty"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CError"
0 0 22 3 2 #" ("
0 0 14 3 1 #"e"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 3 #"ans"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 4 #"AExc"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 3 #") ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 3 #"ans"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ["
0 0 14 3 3 #"CIf"
0 0 22 3 2 #" ("
0 0 14 3 1 #"i"
0 0 22 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"ians"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 20 #"                   ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 4 #"ians"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                     ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 3 #"v-i"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-i"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-i"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 9 #"isObjTrue"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-i"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-i"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-i"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-i"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-i"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                     ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 4 #"ians"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 3 #"CId"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 9 #"grabValue"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 3 #"v-v"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-v"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 7 #"VPoint?"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 10 #"interp-env"
0 0 22 3 2 #" ("
0 0 14 3 9 #"CGetfield"
0 0 22 3 2 #" ("
0 0 14 3 10 #"VPoint-obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 3 #") ("
0 0 14 3 12 #"VPoint-field"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 3 #")) "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-v"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                            "
0 0 14 3 3 #"rst"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"CLet"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 4 #"bind"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 7 #"bindAns"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"bind"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 7 #"bindAns"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"v-bind"
0 0 22 3 1 #" "
0 0 14 3 6 #"e-bind"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-bind"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-bind"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 5 #"where"
0 0 22 3 2 #" ("
0 0 14 3 11 #"VObject-loc"
0 0 22 3 1 #" "
0 0 14 3 6 #"v-bind"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 6 #"e-bind"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-bind"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #" "
0 0 14 3 6 #"v-bind"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-bind"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 7 #"bindAns"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"CSet"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"vans"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 4 #"vans"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 3 #"v-v"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-v"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 5 #"where"
0 0 22 3 2 #" ("
0 0 14 3 6 #"newLoc"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 11 #"isImmutable"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 7 #"VObject"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 3 #") ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #") "
0 0 14 3 5 #"where"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-field"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-v"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ["
0 0 14 3 3 #"CId"
0 0 22 3 2 #" ("
0 0 14 3 4 #"c-id"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 2 #" ("
0 0 14 3 6 #"some-v"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 4 #"c-id"
0 0 22 3 4 #"))) "
0 0 14 3 3 #"s-v"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                       "
0 0 17 3 81
(
 #";[CGetelement (obj indexs) (AVal v-v (hash-set e-v id (some-v (hash-"
 #"ref e-v ))))]"
) 0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ["
0 0 14 3 9 #"CGetfield"
0 0 22 3 2 #" ("
0 0 14 3 5 #"c-obj"
0 0 22 3 1 #" "
0 0 14 3 4 #"c-fd"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-v"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VPoint"
0 0 22 3 1 #" "
0 0 14 3 5 #"c-obj"
0 0 22 3 1 #" "
0 0 14 3 4 #"c-fd"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"AVal"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"e-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 2 #" ("
0 0 14 3 11 #"VObject-loc"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"s-v"
0 0 22 3 2 #" ("
0 0 14 3 11 #"VObject-loc"
0 0 22 3 1 #" "
0 0 14 3 3 #"v-v"
0 0 22 3 2 #") "
0 0 14 3 3 #"v-v"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 4 #"le-v"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 7 #"))])))]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 4 #"vans"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 11 #"CSetelement"
0 0 22 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"oval"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")] "
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ["
0 0 14 3 4 #"ival"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ["
0 0 14 3 4 #"vval"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AVal?"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #") ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AVal?"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 3 #") ("
0 0 14 3 5 #"AVal?"
0 0 22 3 1 #" "
0 0 14 3 4 #"vval"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 3 #")) "
0 0 19 3 5 #"\"Int\""
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 37 #"                                    ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")) "
0 0 19 3 6 #"\"List\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")) "
0 0 19 3 6 #"\"Dict\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"vval"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                 "
0 0 14 3 3 #"env"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 3 #"CId"
0 0 22 3 2 #" ("
0 0 14 3 4 #"c-id"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 41 #"                                        ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 51 #"                                                  ("
0 0 14 3 6 #"some-v"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"c-id"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 51 #"                                                  ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                    [("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")) "
0 0 19 3 6 #"\"List\""
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                     ("
0 0 14 3 7 #"VObject"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"List\""
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 63
#"                                                              ("
0 0 14 3 5 #"VList"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 64
#"                                                               ("
0 0 14 3 4 #"map2"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 72
(
 #"                                                                    "
 #"   ("
) 0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VNum-n"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 76
(
 #"                                                                    "
 #"       ("
) 0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"vval"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 75
(
 #"                                                                    "
 #"       "
) 0 0 14 3 1 #"x"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 8 #"VList-es"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 10 #"build-list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"length"
0 0 22 3 2 #" ("
0 0 14 3 8 #"VList-es"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 6 #")))) ("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 2 #") "
0 0 14 3 1 #"x"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 63
#"                                                              ("
0 0 14 3 11 #"VObject-loc"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 63
#"                                                              ("
0 0 14 3 13 #"VObject-field"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                    [("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")) "
0 0 19 3 6 #"\"Dict\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                     ("
0 0 14 3 7 #"VObject"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"Dict\""
0 0 22 29 1 #"\n"
0 0 22 3 63
#"                                                              ("
0 0 14 3 5 #"VDict"
0 0 22 29 1 #"\n"
0 0 22 3 64
#"                                                               ("
0 0 14 3 8 #"hash-set"
0 0 22 3 2 #" ("
0 0 14 3 10 #"VDict-dict"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 4 #"))) "
0 0 22 29 1 #"\n"
0 0 22 3 86
(
 #"                                                                    "
 #"                 ("
) 0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 86
(
 #"                                                                    "
 #"                 ("
) 0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"vval"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 64
#"                                                               ("
0 0 14 3 11 #"VObject-loc"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 64
#"                                                               ("
0 0 14 3 13 #"VObject-field"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 7 #")))]))]"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 3 #"]) "
0 0 14 3 4 #"lenv"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 23 #"\"Index is not a number\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                         [("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 2 #") "
0 0 14 3 4 #"oval"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                         [("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 2 #") "
0 0 14 3 4 #"ival"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                         [("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 4 #"vval"
0 0 22 3 2 #") "
0 0 14 3 4 #"vval"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 26 #"\"You should not been here\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 6 #")])))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 11 #"CGetelement"
0 0 22 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"indexs"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"oval"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AVal?"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 37 #"                                    ("
0 0 15 3 6 #"letrec"
0 0 22 3 3 #" (["
0 0 14 3 4 #"ival"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 1 #" "
0 0 14 3 6 #"indexs"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 46 #"                                             ["
0 0 14 3 4 #"last"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                      ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AVal?"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 6 #"length"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 2 #") "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 47 #"                                              ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"last"
0 0 22 3 3 #")) "
0 0 19 3 5 #"\"Int\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 51 #"                                                  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 1 #"i"
0 0 22 3 2 #" ("
0 0 14 3 6 #"VNum-n"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 6 #"))))])"
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                    ("
0 0 15 3 4 #"case"
0 0 22 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 56 #"                                                      [("
0 0 14 3 4 #"List"
0 0 22 3 3 #") ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 2 #">="
0 0 22 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 2 #" ("
0 0 14 3 6 #"length"
0 0 22 3 2 #" ("
0 0 14 3 8 #"VList-es"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 67
#"                                                                  ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 14 #"\"Index is out\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 67
#"                                                                  ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 10 #"getElement"
0 0 22 3 2 #" ("
0 0 14 3 8 #"VList-es"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 1 #" "
0 0 14 3 4 #"oval"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 85
(
 #"                                                                    "
 #"                ("
) 0 0 14 3 7 #"reverse"
0 0 22 3 2 #" ("
0 0 14 3 10 #"build-list"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 2 #") "
0 0 14 3 1 #"x"
0 0 22 3 5 #")))) "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 3 51 #"                                                  ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 23 #"\"Index is not a number\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 47 #"                                              ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))) "
0 0 19 3 5 #"\"Int\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 61
#"                                                            ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))) "
0 0 19 3 7 #"\"Empty\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 57 #"                                                        ("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 6 #"second"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))) "
0 0 19 3 5 #"\"Int\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 61
#"                                                            ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 6 #"second"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))) "
0 0 19 3 7 #"\"Empty\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 57 #"                                                        ("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"third"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))) "
0 0 19 3 5 #"\"Int\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 61
#"                                                            ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"VObject-type"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"third"
0 0 22 3 1 #" "
0 0 14 3 4 #"ival"
0 0 22 3 4 #"))) "
0 0 19 3 7 #"\"Empty\""
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 52 #"                                                   ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 17 #"\"I don't address\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 52 #"                                                   ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 23 #"\"Index with wrong type\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                          "
0 0 14 3 4 #"last"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                    "
0 0 14 3 4 #"oval"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"CSeq"
0 0 22 3 2 #" ("
0 0 14 3 2 #"e1"
0 0 22 3 1 #" "
0 0 14 3 2 #"e2"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 5 #"e1Ans"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 2 #"e1"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 21 #"                    ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 5 #"e1Ans"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-e1"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-e1"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-e1"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-e1"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 2 #"e2"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-e1"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-e1"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-e1"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 5 #"e1Ans"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"CApp"
0 0 22 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 6 #"funAns"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                       "
0 0 17 3 18 #";; function answer"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 6 #"funAns"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"v-fobj"
0 0 22 3 1 #" "
0 0 14 3 6 #"e-fobj"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-fobj"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-fobj"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                           "
0 0 17 3 17 #";; function value"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 1 #" "
0 0 14 3 6 #"v-fobj"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ["
0 0 14 3 8 #"VClosure"
0 0 22 3 2 #" ("
0 0 14 3 6 #"clargs"
0 0 22 3 1 #" "
0 0 14 3 6 #"clbody"
0 0 22 3 1 #" "
0 0 14 3 5 #"clenv"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 7 #"bind-es"
0 0 22 3 2 #" ("
0 0 14 3 9 #"bind-args"
0 0 22 3 1 #" "
0 0 14 3 6 #"clargs"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 58
#"                                                         ("
0 0 14 3 12 #"allocLocList"
0 0 22 3 2 #" ("
0 0 14 3 6 #"length"
0 0 22 3 1 #" "
0 0 14 3 6 #"clargs"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 58
#"                                                         ("
0 0 14 3 10 #"interpArgs"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 6 #"e-fobj"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-fobj"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-fobj"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 57 #"                                                         "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 4 #")]) "
0 0 17 3 46 #";; extend env using global instead closure-env"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 7 #"bind-es"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-es"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-es"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-es"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-es"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 6 #"clbody"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-es"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-es"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-es"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 7 #"bind-es"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 16 #"\"Not a function\""
0 0 22 3 1 #" "
0 0 14 3 6 #"e-fobj"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-fobj"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-fobj"
0 0 22 3 4 #")])]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 6 #"funAns"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 5 #"CFunc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 8 #"VClosure"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CPrim1"
0 0 22 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 22 3 1 #" "
0 0 14 3 3 #"arg"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 6 #"argAns"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"arg"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 6 #"argAns"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"v-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 10 #"interp-env"
0 0 22 3 2 #" ("
0 0 14 3 12 #"python-prim1"
0 0 22 3 1 #" "
0 0 14 3 4 #"prim"
0 0 22 3 1 #" "
0 0 14 3 6 #"argAns"
0 0 22 3 2 #") "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 6 #"argAns"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CPrim2"
0 0 22 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 22 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 22 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 2 #" ("
0 0 14 3 12 #"python-prim2"
0 0 22 3 1 #" "
0 0 14 3 4 #"prim"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")) "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 31 #";[CPrim2Seq (left prims args) ]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 22 #";;setfield for object "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 9 #"CSetfield"
0 0 22 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"fld"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"objv"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 4 #"objv"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"v-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 3 #"val"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 4 #")]) "
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"v-val"
0 0 22 3 1 #" "
0 0 14 3 5 #"e-val"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-val"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-val"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 50 #"                                                 ("
0 0 15 3 4 #"cond"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                   [("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 8 #"VObject?"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-obj"
0 0 22 3 4 #")) ("
0 0 14 3 12 #"interp-error"
0 0 22 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 22 3 1 #" "
0 0 19 3 30 #"\"Non-object in field update: \""
0 0 22 3 2 #" ("
0 0 14 3 6 #"pretty"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-obj"
0 0 22 3 3 #")) "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 52 #"                                                   ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-field"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-obj"
0 0 22 3 2 #") "
0 0 14 3 3 #"fld"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-val"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 64
#"                                                                "
0 0 14 3 3 #"val"
0 0 22 3 4 #")])]"
0 0 22 29 1 #"\n"
0 0 22 3 44 #"                                           ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 4 #"objv"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 21 #";;getfield for object"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 9 #"CGetfield"
0 0 22 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"fld"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"objv"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"obj"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 4 #"objv"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 5 #"v-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ("
0 0 15 3 4 #"cond"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 39 #"                                     [("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 8 #"VObject?"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-obj"
0 0 22 3 4 #")) ("
0 0 14 3 12 #"interp-error"
0 0 22 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 22 3 1 #" "
0 0 19 3 30 #"\"Non-object in field update: \""
0 0 22 3 2 #" ("
0 0 14 3 6 #"pretty"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-obj"
0 0 22 3 3 #")) "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 6 #"result"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-field"
0 0 22 3 1 #" "
0 0 14 3 5 #"v-obj"
0 0 22 3 2 #") "
0 0 14 3 3 #"fld"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 46 #"                                             ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" [("
0 0 14 3 5 #"none?"
0 0 22 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 3 #") ("
0 0 14 3 12 #"interp-error"
0 0 22 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 22 3 1 #" "
0 0 19 3 22 #"\"Unbound identifier: \""
0 0 22 3 2 #"  "
0 0 14 3 3 #"fld"
0 0 22 3 2 #") "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 52 #"                                                   ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"some-v"
0 0 22 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 2 #") "
0 0 14 3 5 #"e-obj"
0 0 22 3 1 #" "
0 0 14 3 5 #"s-obj"
0 0 22 3 1 #" "
0 0 14 3 6 #"le-obj"
0 0 22 3 7 #")]))])]"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 4 #"objv"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 7 #"CObject"
0 0 22 3 2 #" ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 4 #"prim"
0 0 22 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 7 #"primVal"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"prim"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 20 #"                   ["
0 0 14 3 2 #"rs"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 2 #" ("
0 0 14 3 13 #"resetLocalEnv"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 20 #"                   ["
0 0 14 3 5 #"where"
0 0 22 3 2 #" ("
0 0 14 3 6 #"newLoc"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"               ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 7 #"primVal"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-pv"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-pv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-pv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-pv"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                       ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 2 #"rs"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-rs"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-rs"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-rs"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-rs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 7 #"VObject"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 4 #"v-pv"
0 0 22 3 1 #" "
0 0 14 3 5 #"where"
0 0 22 29 1 #"\n"
0 0 22 3 40 #"                                       ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 9 #"grabValue"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-rs"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-rs"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-rs"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                     ("
0 0 14 3 15 #"getModifiedVars"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-rs"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 48 #"                                                "
0 0 14 3 3 #"rst"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 37 #"                                     "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 2 #"rs"
0 0 22 3 3 #"])]"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 7 #"primVal"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 7 #"CTryExn"
0 0 22 3 2 #" ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 6 #"hdlers"
0 0 22 3 1 #" "
0 0 14 3 3 #"els"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 5 #"bodyv"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 5 #"bodyv"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 17 3 38 #";; if no exception, interp \"else\" part"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"els"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 17 3 45 #";; Exception, interp \"Exception Handler\" pary"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ["
0 0 14 3 4 #"AExc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 6 #"hdlers"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                 "
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                 )] "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 22 29 1 #"\n"
0 0 22 3 37 #"                                     "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 11 #"CTryFinally"
0 0 22 3 2 #" ("
0 0 14 3 1 #"b"
0 0 22 3 1 #" "
0 0 14 3 2 #"fb"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 2 #"bv"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                          "
0 0 17 3 72
(
 #";;A finally clause is always executed before leaving the try stateme"
 #"nt, "
) 0 0 22 29 1 #"\n"
0 0 22 3 26 #"                          "
0 0 17 3 10 #";;whether "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 9 #"exception"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 8 #"occurred"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 4 #" not"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 2 #"bv"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 2 #"fb"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ["
0 0 14 3 4 #"AExc"
0 0 22 3 2 #" ("
0 0 14 3 4 #"v-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 3 #") ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 2 #"fb"
0 0 22 3 1 #" "
0 0 14 3 4 #"e-bv"
0 0 22 3 1 #" "
0 0 14 3 4 #"s-bv"
0 0 22 3 1 #" "
0 0 14 3 5 #"le-bv"
0 0 22 3 5 #")]))]"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 2 #";["
0 0 17 3 14 #"CExceptHandler"
0 0 17 3 2 #" ("
0 0 17 3 4 #"name"
0 0 17 3 1 #" "
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 7 #"type) ]"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 22 29 1 #"\n"
0 0 22 3 68
#"                                                                    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 30 #";;Haven't handle \"cause\" yet ;"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 6 #"CRaise"
0 0 22 3 2 #" ("
0 0 14 3 5 #"cause"
0 0 22 3 1 #" "
0 0 14 3 3 #"exc"
0 0 22 3 3 #") ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 4 #"excv"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"exc"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 4 #"excv"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 6 #"v-excv"
0 0 22 3 1 #" "
0 0 14 3 6 #"e-excv"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-excv"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-excv"
0 0 22 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 14 3 6 #"v-excv"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 1 #" "
0 0 14 3 6 #"v-excv"
0 0 22 3 2 #") "
0 0 14 3 6 #"e-excv"
0 0 22 3 1 #" "
0 0 14 3 6 #"s-excv"
0 0 22 3 1 #" "
0 0 14 3 7 #"le-excv"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 4 #"excv"
0 0 22 3 4 #"]))]"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                          "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"no"
0 0 19 3 5 #" case"
0 0 19 3 1 #"\""
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"resetLocalEnv"
0 0 22 3 2 #" ("
0 0 14 3 6 #"oldEnv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 2 #"  "
0 0 14 3 8 #"LocalEnv"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 3 #") ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #") ("
0 0 14 3 9 #"hash-keys"
0 0 22 3 1 #" "
0 0 14 3 6 #"oldEnv"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"getModifiedVars"
0 0 22 3 2 #" ("
0 0 14 3 6 #"oldEnv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 6 #"some-v"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 6 #"oldEnv"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 5 #"))) ("
0 0 14 3 9 #"hash-keys"
0 0 22 3 1 #" "
0 0 14 3 6 #"oldEnv"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"bind-args"
0 0 22 3 2 #" ("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"locs"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"anss"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #") ("
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 3 #") ("
0 0 14 3 4 #"lenv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" [("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VStr"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"dummy"
0 0 19 3 1 #"\""
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"        [("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 6 #"length"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #") ("
0 0 14 3 6 #"length"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 7 #"lastAns"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AVal?"
0 0 22 3 1 #" "
0 0 14 3 7 #"lastAns"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"               ("
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 4 #"VStr"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"dummy"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                     ("
0 0 14 3 9 #"extendEnv"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 7 #"lastAns"
0 0 22 3 3 #")) "
0 0 17 3 40 #";; use passin env instead of closure-env"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                     ("
0 0 14 3 13 #"overrideStore"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 7 #"lastAns"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                     ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 7 #"lastAns"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 14 3 7 #"lastAns"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Arity"
0 0 19 3 9 #" mismatch"
0 0 19 3 1 #"\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"grabValue"
0 0 22 3 2 #" ("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 3 #") ("
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #") ("
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 3 #") ("
0 0 14 3 4 #"lenv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 22 3 2 #" ("
0 0 14 3 8 #"optionof"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 3 #") ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 15 3 3 #"for"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"some"
0 0 22 3 2 #" ("
0 0 14 3 3 #"loc"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 15 3 9 #"type-case"
0 0 22 3 2 #" ("
0 0 14 3 8 #"optionof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 3 #") ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 3 #"loc"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 4 #"some"
0 0 22 3 2 #" ("
0 0 14 3 1 #"v"
0 0 22 3 3 #") ("
0 0 14 3 4 #"AVal"
0 0 22 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 4 #"none"
0 0 22 3 5 #" () ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Unbound"
0 0 19 3 11 #" identifier"
0 0 19 3 1 #"\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 4 #")])]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"none"
0 0 22 3 5 #" () ("
0 0 14 3 12 #"interp-error"
0 0 22 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"location"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 5 #"found"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 6 #"store\""
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 24 #";; get a new memory addr"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"newLoc"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 22 3 3 #" (["
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #" ("
0 0 14 3 3 #"box"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 22 3 4 #" () "
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 8 #"set-box!"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 22 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 5 #"unbox"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 72
(
 #"; take in a list of CExp (func args) and interp them to a list of an"
 #"swer"
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpArgs"
0 0 22 3 2 #" ["
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 4 #")] ["
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #"] ["
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 3 #"] ["
0 0 14 3 4 #"lenv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #"]) "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 6 #"argAns"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ("
0 0 15 3 9 #"type-case"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #" "
0 0 14 3 6 #"argAns"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ["
0 0 14 3 4 #"AVal"
0 0 22 3 2 #" ("
0 0 14 3 7 #"v-first"
0 0 22 3 1 #" "
0 0 14 3 7 #"e-first"
0 0 22 3 1 #" "
0 0 14 3 7 #"s-first"
0 0 22 3 1 #" "
0 0 14 3 8 #"le-first"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"argAns"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpArgs"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #") "
0 0 14 3 7 #"e-first"
0 0 22 3 1 #" "
0 0 14 3 7 #"s-first"
0 0 22 3 1 #" "
0 0 14 3 8 #"le-first"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"argAns"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 7 #")]))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 57 #";; return a list of location with size given by param num"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"allocLocList"
0 0 22 3 2 #" ("
0 0 14 3 5 #"count"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 14 3 5 #"count"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 6 #"newLoc"
0 0 22 3 3 #") ("
0 0 14 3 12 #"allocLocList"
0 0 22 3 2 #" ("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 5 #"count"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 45 #";; extend env with list of args and locations"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"extendEnv"
0 0 22 3 2 #" ("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"locs"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 9 #"extendEnv"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 3 #") ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 50 #";; extend store with list of locations and answers"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"overrideStore"
0 0 22 3 2 #" ("
0 0 14 3 4 #"locs"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 8 #"Location"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"anss"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"sto"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 13 #"overrideStore"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 21 #"                    ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"locs"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"anss"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"sto"
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 104
(
 #";; interp a list and return the result, if there is exception in the"
 #" list it will be on the last element"
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CExp"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 3 #"Env"
0 0 22 3 3 #") ("
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 5 #"Store"
0 0 22 3 3 #") ("
0 0 14 3 4 #"lenv"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 8 #"LocalEnv"
0 0 22 3 3 #")) "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 14 3 5 #"empty"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interp-env"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"store"
0 0 22 3 1 #" "
0 0 14 3 4 #"lenv"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"AExc?"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 2 #" ("
0 0 14 3 10 #"interpList"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-env"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 3 #") ("
0 0 14 3 8 #"AVal-sto"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 3 #") ("
0 0 14 3 9 #"AVal-lenv"
0 0 22 3 1 #" "
0 0 14 3 3 #"rst"
0 0 22 3 7 #")))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 50 #";; specific function to app values into hash table"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"valfoldl2"
0 0 22 3 2 #" ("
0 0 14 3 4 #"keys"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 4 #")) ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CAns"
0 0 22 3 4 #")) ("
0 0 14 3 1 #"h"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 4 #"))) "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"hashof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 14 3 1 #"h"
0 0 22 3 12 #"            "
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 9 #"valfoldl2"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 3 #") ("
0 0 14 3 8 #"hash-set"
0 0 22 3 1 #" "
0 0 14 3 1 #"h"
0 0 22 3 2 #" ("
0 0 14 3 13 #"VObject-value"
0 0 22 3 2 #" ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"keys"
0 0 22 3 5 #"))) ("
0 0 14 3 8 #"AVal-val"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"getElement"
0 0 22 3 2 #" ("
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 3 4 #")) ("
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #":"
0 0 22 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 22 3 1 #" "
0 0 14 3 6 #"number"
0 0 22 3 4 #"))) "
0 0 14 3 1 #":"
0 0 22 3 1 #" "
0 0 14 3 4 #"CVal"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #") "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 10 #"getElement"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 4 #"))))"
0           0
