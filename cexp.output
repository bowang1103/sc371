#(struct:CLet print #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-print) #(struct:CPrim1 print #(struct:CId to-print))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet callable #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-callable) #(struct:CPrim1 callable #(struct:CId check-callable))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet bool #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-bool) #(struct:CPrim1 bool #(struct:CId check-bool))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet int #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-int) #(struct:CPrim1 int #(struct:CId to-int))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet float #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-float) #(struct:CPrim1 float #(struct:CId to-float))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet str #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-str) #(struct:CPrim1 str #(struct:CId to-str))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet len #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-len) #(struct:CPrim1 len #(struct:CId to-len))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet list #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-list) #(struct:CPrim1 list #(struct:CId to-list))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet tuple #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-tuple) #(struct:CPrim1 tuple #(struct:CId to-tuple))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet dict #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-dict) #(struct:CPrim1 dict #(struct:CId to-dict))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet abs #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-abs) #(struct:CPrim1 abs #(struct:CId to-abs))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet True #(struct:CLet newObj #(struct:CObject "Bool" #(struct:CNum 1) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet False #(struct:CLet newObj #(struct:CObject "Bool" #(struct:CNum 0) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet isinstance #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (instance class) #(struct:CPrim2 instanceof #(struct:CPrim1 tagof #(struct:CId instance)) #(struct:CPrim1 tagof #(struct:CApp #(struct:CId class) ())))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertTrue #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-true) #(struct:CIf #(struct:CId check-true) #(struct:CId True) #(struct:CError #(struct:CStr "Assert True Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertFalse #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-false) #(struct:CIf #(struct:CId check-false) #(struct:CError #(struct:CStr "Assert False Failed")) #(struct:CId True))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertIn #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 in #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert In Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertNotIn #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 !in #(struct:CId arg1) #(struct:CId arg2)) #(struct:CError #(struct:CStr "Assert Not In Failed")) #(struct:CId True))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertEqual #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 == #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert Equal Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertNotEqual #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 != #(struct:CId arg1) #(struct:CId arg2)) #(struct:CError #(struct:CStr "Assert Not Equal Failed")) #(struct:CId True))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertIs #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 is #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert Is Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertIsNot #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 !is #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert Is Not Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___fail #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc () #(struct:CError #(struct:CStr "Fail"))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet Exception #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1) #(struct:CLet newObj #(struct:CObject "Exception" #(struct:CException "Exception" #(struct:CId arg1)) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet TypeError #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1) #(struct:CLet newObj #(struct:CObject "Exception" #(struct:CException "TypeError" #(struct:CId arg1)) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ZeroDivisionError #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1) #(struct:CLet newObj #(struct:CObject "Exception" #(struct:CException "ZeroDivisionError" #(struct:CId arg1)) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet KeyError #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1) #(struct:CLet newObj #(struct:CObject "Exception" #(struct:CException "KeyError" #(struct:CId arg1)) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet IndexError #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1) #(struct:CLet newObj #(struct:CObject "Exception" #(struct:CException "IndexError" #(struct:CId arg1)) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet RuntimeError #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1) #(struct:CLet newObj #(struct:CObject "Exception" #(struct:CException "RuntimeError" #(struct:CId arg1)) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CSeq #(struct:CSeq #(struct:CSeq #(struct:CApp #(struct:CId ___assertIs) (#(struct:CPrim1 not #(struct:CLet newObj #(struct:CObject "Dict" #(struct:CDict () ()) #(struct:CEmpty)) #(struct:CId newObj))) #(struct:CId True))) #(struct:CApp #(struct:CId ___assertTrue) (#(struct:CLet newObj #(struct:CObject "Dict" #(struct:CDict (#(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 1) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj)))) (#(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 2) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))))) #(struct:CEmpty)) #(struct:CId newObj))))) #(struct:CApp #(struct:CId ___assertIs) (#(struct:CApp #(struct:CId bool) (#(struct:CLet newObj #(struct:CObject "Dict" #(struct:CDict () ()) #(struct:CEmpty)) #(struct:CId newObj)))) #(struct:CId False)))) #(struct:CApp #(struct:CId ___assertIs) (#(struct:CApp #(struct:CId bool) (#(struct:CLet newObj #(struct:CObject "Dict" #(struct:CDict (#(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 1) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj)))) (#(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 2) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))))) #(struct:CEmpty)) #(struct:CId newObj)))) #(struct:CId True)))))))))))))))))))))))))))))))))