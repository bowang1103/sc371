#(struct:CLet print #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (to-print) #(struct:CPrim1 print #(struct:CId to-print))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet callable #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-callable) #(struct:CPrim1 callable #(struct:CId check-callable))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet bool #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-bool) #(struct:CPrim1 bool #(struct:CId check-bool))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet True #(struct:CLet newObj #(struct:CObject "Bool" #(struct:CNum 1) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet False #(struct:CLet newObj #(struct:CObject "Bool" #(struct:CNum 0) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet ___assertTrue #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-true) #(struct:CIf #(struct:CId check-true) #(struct:CId True) #(struct:CError #(struct:CStr "Assert True Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertFalse #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (check-false) #(struct:CIf #(struct:CId check-false) #(struct:CError #(struct:CStr "Assert False Failed")) #(struct:CId True))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertIn #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 in #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert In Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertNotIn #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 in #(struct:CId arg1) #(struct:CId arg2)) #(struct:CError #(struct:CStr "Assert Not In Failed")) #(struct:CId True))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertEqual #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 == #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert Equal Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertNotEqual #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 == #(struct:CId arg1) #(struct:CId arg2)) #(struct:CError #(struct:CStr "Assert Not Equal Failed")) #(struct:CId True))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___assertIs #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc (arg1 arg2) #(struct:CIf #(struct:CPrim2 is #(struct:CId arg1) #(struct:CId arg2)) #(struct:CId True) #(struct:CError #(struct:CStr "Assert Is Failed")))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CLet ___fail #(struct:CLet newObj #(struct:CObject "Func" #(struct:CFunc () #(struct:CError #(struct:CStr "Fail"))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CSeq #(struct:CSeq #(struct:CLet value #(struct:CLet newObj #(struct:CObject "List" #(struct:CList (#(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 1) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 2) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 3) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))) #(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 4) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))))) #(struct:CEmpty)) #(struct:CId newObj)) #(struct:CSet a #(struct:CId value))) #(struct:CLet value #(struct:CGetelement #(struct:CId a) (#(struct:CLet newObj #(struct:CObject "Int" #(struct:CNum 3) #(struct:CEmpty)) #(struct:CSeq #(struct:CSetfield #(struct:CId newObj) "%add" #(struct:CFunc (self right) #(struct:CPrim2 + #(struct:CId self) #(struct:CId right)))) #(struct:CId newObj))))) #(struct:CSet x #(struct:CId value)))) #(struct:CApp #(struct:CId print) (#(struct:CId x)))))))))))))))))